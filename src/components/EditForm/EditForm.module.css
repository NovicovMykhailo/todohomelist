.form {
  display: flex;
  gap: 15px;
  flex-direction: column;
  padding: 25px;
  background-color: #fff;

  border-radius: 15px;
  box-shadow: rgba(124, 123, 123, 0.25) 0px 0.0625em 0.0625em, rgba(131, 130, 130, 0.25) 0px 0.125em 0.5em,
    rgba(147, 145, 145, 0.1) 0px 0px 0px 1px inset;
}
.editName {
  font-family: 'DM Sans', sans-serif;
  letter-spacing: 0.9px;
  text-transform: capitalize;
  font-weight: 600;
  text-align: center;
}
.editInput,
.edittext {
  outline: none;
  resize: none;
  margin: 0;

  border-radius: 10px;
  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
  border: none;
  font-size: 16px;
  font-weight: 500;
  font-family: 'DM Sans', sans-serif;
}
.edittext {
  padding: 8px;
}
.editInput:focus,
.edittext:focus {
  box-shadow: rgba(18, 215, 215, 0.766) 0px 1px 3px 0px, rgba(3, 230, 230, 0.766) 0px 0px 0px 1px;
}
.btnContainer {
  display: flex;
  gap: 15px;
  flex-direction: column;
}
.formBtn {
  width: 100%;
  height: 36px;
  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;

  cursor: pointer;
  border-radius: 15px;
  border: none;
  font-weight: 800;
  background-image: url('../images/tick.png');
  background-size: 12%;
  background-repeat: no-repeat;
  background-position-x: center;
  background-position-y: center;
  transition: all 0.1s ease;
}
.formBtn:hover {
  background-color: rgb(235, 246, 240);
  box-shadow: rgb(235, 246, 240) 0px 30px 90px;
  scale: 1.05;
}

.formBtnClose {
  width: 100%;
  height: 36px;
  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;

  cursor: pointer;
  border-radius: 15px;
  border: none;
  font-weight: 800;
  background-image: url('../images/cancel.png');
  background-size: 9%;
  background-repeat: no-repeat;
  background-position-x: center;
  background-position-y: center;
  transition: all 0.1s ease;
}
.formBtnClose:hover {
  background-color: rgb(246, 234, 234);
  box-shadow: rgb(246, 234, 234) 0px 30px 90px;
  scale: 1.05;
}

@media screen and (min-width: 568px) {
  .btnContainer {
    flex-direction: row;
  }
  .form {
    width: 400px;
  }
}


@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkBoxWrapper input[type='checkbox'] {
    --active: #275efe;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, 0.3);
    --border: #bbc1e1;
    --border-hover: #275efe;
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkBoxWrapper input[type='checkbox']:after {
    content: '';
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
  }
  .checkBoxWrapper input[type='checkbox']:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  .checkBoxWrapper input[type='checkbox']:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkBoxWrapper input[type='checkbox']:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkBoxWrapper input[type='checkbox']:disabled + label {
    cursor: not-allowed;
  }
  .checkBoxWrapper input[type='checkbox']:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkBoxWrapper input[type='checkbox']:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .checkBoxWrapper input[type='checkbox']:not(.switch) {
    width: 21px;
  }
  .checkBoxWrapper input[type='checkbox']:not(.switch):after {
    opacity: var(--o, 0);
  }
  .checkBoxWrapper input[type='checkbox']:not(.switch):checked {
    --o: 1;
  }
  .checkBoxWrapper input[type='checkbox'] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkBoxWrapper input[type='checkbox']:not(.switch) {
    border-radius: 7px;
  }
  .checkBoxWrapper input[type='checkbox']:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  .checkBoxWrapper input[type='checkbox']:not(.switch):checked {
    --r: 43deg;
  }
}

.checkBoxWrapper * {
  box-sizing: inherit;
}
.checkBoxWrapper *:before,
.checkBoxWrapper *:after {
  box-sizing: inherit;
}
.checkBoxes{
  display: flex;
  width: 100%;
  justify-content: center;
  gap: 30%;
}